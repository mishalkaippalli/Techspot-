<%- include("../partials/adminHeader") %>
        <section class="content-main">
            <div class="content-header">
                <h2 class="content-title">Sales Report</h2>
                <div>
                    <a href="#" id="createSalesReport" class="btn btn-primary"><i
                            class="text-muted material-icons md-post_add"></i>Create
                        report</a>
                </div>
            </div>
            <div class="card mb-4">
                <header class="card-header">
                    <div class="row gx-3">
                        <!-- Date Inputs and Filter Button -->
                        <div class="row">
                            <p class="text-center" style="color: rgb(175, 21, 21);" id="dateError"></p>
                            <div class="col-lg-3 col-md-3 me-auto">
                                <p class="text-center text-info">Starting Date</p>
                                <input type="date" value="" id="startingDate" class="form-control">
                            </div>
                            <div class="col-lg-3 col-md-3 me-auto">
                                <p class="text-center text-info">Ending Date</p>
                                <input type="date" id="endingDate" class="form-control">

                            </div>
                            <div class="col-lg-3 col-md-3  mb-3">
                                <p>.</p>
                                <button class="btn btn-primary" id="dateWiseFilterBtn">Filter</button>
                            </div>
                            <div class="col-lg-2 col-md-3 col-6 mt-4">
                                <select class="form-select" onchange="filter(this.value)">
                                    <option value="0">All</option>
                                    <option value="1">Today</option>
                                    <option value="2">Weekly</option>
                                    <option value="3">Monthly</option>
                                    <option value="4">Yearly</option>
                                </select>
                            </div>
                        </div>
                    </div>

                </header>
                <!-- Contents of our table -->
                <div class="card-body" id="orderList">
                    <div class="table-responsive">
                        <table class="table table-hover" id="salesTable">
                            <thead>
                                <tr>
                                    <th>OrderId</th>
                                    <th>Date</th>
                                    <th>Total Amount</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% if (orders.length) { %>
                                    <% for( let i=0; i < orders.length; i++ ) { %>
                                        <tr>
                                            <td width="40%">
                                                <div>
                                                    <p><%- orders[i]._id %></p>
                                                </div>
                                                </a>
                                            </td>
                                            <td><%- new Date(orders[i].date).toLocaleDateString('en-GB') %></td>
                                            <td>&#x20B9; <%- orders[i].actualTotalAmount %></td>

                                        </tr>
                                        <% } %>
                                            <% } %>
                            </tbody>
                        </table> <!-- table-responsive.// -->
                    </div>
                </div>
            </div>

        </section> <!-- content-main end// -->
        <footer class="main-footer font-xs">
            <div class="row pb-30 pt-15">
                <div class="col-sm-6">
                    <script data-cfasync="false"
                        src="../../../cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script>
                    <script>
                        document.write(new Date().getFullYear())
                    </script> ©, Willink - HTML Ecommerce Template .
                </div>
                <div class="col-sm-6">
                    <div class="text-sm-end">
                        All rights reserved
                    </div>
                </div>
            </div>
        </footer>
    </main>
    <script>
        document.getElementById('startingDate').valueAsDate = new Date();
    </script>

    <!-- Data passing for filtering -->
    <script>
        // Frequent option function calling
        async function filter(Number) {
            if (Number) {
                try {
                    const response = await fetch(`/admin/filter-sales/?identify=${Number}`);
                    const data = await response.json();
                    const orders = data.orders;

                    const orderListDiv = document.getElementById('orderList');
                    if (!orderListDiv) {
                        console.error("Element with ID 'orderList' not found in HTML");
                        return;
                    }

                    const orderListHTML = `
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover" id="salesTable">
                                    <thead>
                                        <tr>
                                            <th>OrderId</th>
                                            <th>Date</th>
                                            <th>Total Amount</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        ${orders.length > 0 ?
                            orders.map(order => `
                                                <tr>
                                                    <td width="40%">
                                                        <div>
                                                            <p>${order._id}</p>
                                                        </div>
                                                    </td>
                                                    <td>${new Date(order.date).toLocaleDateString('en-GB')}</td>
                                                    <td>₹${order.actualTotalAmount}</td>
                                                </tr>
                                            `).join('') :
                            '<tr><td colspan="3" class="text-center" style="color:red">No order occur</td></tr>'
                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    `;
                    orderListDiv.innerHTML = orderListHTML;
                } catch (error) {
                    console.error('Error:', error);
                }
            }
        }

        // Date wise filtering 

        document.getElementById('dateWiseFilterBtn').addEventListener('click', async (event) => {
            event.preventDefault();

            const isValid = validateInputDate();

            if (isValid) {
                const startingDate = document.getElementById('startingDate').value;
                const endingDate = document.getElementById('endingDate').value;
                // console.log(startingDate)
                // console.log(endingDate)

                const response = await fetch('/admin/datewise-filter-sales', {
                    method: 'post',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ startingDate, endingDate })
                })

                const result = await response.json()
                const orders = result.orders
                const orderListDiv = document.getElementById('orderList');

                const orderListHTML = `
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover" id="salesTable">
                                    <thead>
                                        <tr>
                                            <th>OrderId</th>
                                            <th>Date</th>
                                            <th>Total Amount</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        ${orders.length > 0 ?
                        orders.map(order => `
                                                <tr>
                                                    <td width="40%">
                                                        <div>
                                                            <p>${order._id}</p>
                                                        </div>
                                                    </td>
                                                    <td>${new Date(order.date).toLocaleDateString('en-GB')}</td>
                                                    <td>₹${order.actualTotalAmount}</td>
                                                </tr>
                                            `).join('') :
                        '<tr><td colspan="3" class="text-center" style="color:red">No order occur</td></tr>'
                    }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    `;
                orderListDiv.innerHTML = orderListHTML;
            } else {
                console.log('Not proper data')
            }
        })


        // Date form validation
        function validateInputDate() {
            const startingDate = document.getElementById('startingDate').value;
            const endingDate = document.getElementById('endingDate').value;

            let isValid = true;

            // Checking the start and end logic

            if (dateValidate(startingDate, endingDate) === false) {
                document.getElementById('dateError').textContent = 'Check your dates'
                document.getElementById('startingDate').style.borderColor = 'red'
                document.getElementById('endingDate').style.borderColor = 'red'
                setTimeout(() => {
                    document.getElementById('dateError').textContent = ''
                    document.getElementById('startingDate').style.borderColor = ''
                    document.getElementById('endingDate').style.borderColor = ''
                }, 5000)
                isValid = false;
            }



            return isValid;
        }
        function dateValidate(startingDate, endingDate) {
            const created = new Date(startingDate);
            const expire = new Date(endingDate);
            return created <= expire;
        }
    </script>

    <!-- Creating Sales Report -->
    <script>
        document.getElementById('createSalesReport').addEventListener('click', async (event) => {
            event.preventDefault();

            // Get a reference to the table
            const salesTable = document.getElementById('salesTable');

            // Get the table body
            const tableBody = salesTable.querySelector('tbody');

            const salesData = []
            // Iterate through rows in the table
            for (const row of tableBody.rows) {
                // Access individual cells in the row
                const orderId = row.cells[0].textContent.trim();
                const date = row.cells[1].textContent;
                let totalAmount = row.cells[2].textContent.trim();
                totalAmount = parseFloat(totalAmount.replace(/[^0-9]/g, ''), 10);
                // Do something with these values, for example, log them
                
                const orderData = {
                    orderId: orderId,
                    date: date,
                    totalAmount: totalAmount
                }

                salesData.push(orderData);
            }


            try {
                const response = await fetch('/admin/generate-pdf', {
                    method: 'post',
                    headers: {
                        "Content-Type": 'application/json'
                    },
                    body: JSON.stringify(salesData)
                })

                if (response.ok) {
                    const blob = await response.blob();
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = 'report.pdf';
                    document.body.appendChild(a);
                    a.click();
                    document.body.removeChild(a);
                } else {
                    console.error('Failed to generate PDF');
                }
            } catch (error) {
                console.log(error.message);
            }

        })
    </script>
    <script src="/assets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="/assets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/assets/js/vendors/select2.min.js"></script>
    <script src="/assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="/assets/js/vendors/jquery.fullscreen.min.js"></script>
    <!-- Main Script -->
    <script src="/assets/js/main.js" type="text/javascript"></script>
</body>


<!-- Mirrored from wp.alithemes.com/html/evara/evara-backend/page-sellers-list.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 01 Aug 2021 15:33:23 GMT -->

</html>