<%- include("../partials/adminHeader") %>

<style>
    .error-message {
        color: red;
        margin-top: 5px;
        font-size: 14px; /* Adjust font size as needed */
    }
</style>


    <section class="content-main">
        <div class="row">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Edit Product</h2>

                </div>
            </div>
            <div class="col-lg-6">
                <div class="card mb-4">

                    <div class="card-body">
                        <form method="post" action="/admin/editProduct/<%=product._id%>" enctype="multipart/form-data" 
                            onsubmit="return validateAndSubmit()" multiple>
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text" name="productName" value="<%= product.productName %>"
                                    class="form-control border" id="product_name">
                                    <div id="productName-error" class="error-message"></div>
                            </div>
                            <div class="col-lg-4 mb-4">
                                <label class="form-label">Brand</label>
                                <select class="form-select border" name="brand">
                                    <option  value="<%- product.brand %>"><%-
                                    product.brand %>
                                    </option>
                                    <% for (let i=0; i < brand.length; i++) { %>
                                        <option value="<%=brand[i].brandName %>">
                                            <%= brand[i].brandName %>
                                        </option>
                                        <% } %>
                                </select>

                            </div>
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                <textarea name="description" class="form-control border"
                                    rows="4"><%= product.description %></textarea>
                                    <div id="description" class="error-message"></div>

                            </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Regular price</label>
                                        <input placeholder="$" name="regularPrice" type="text"
                                            value="<%= product.regularPrice %>" class="form-control border">
                                            <div id="regularPrice-error" class="error-message"></div>

                                    </div>
                                </div>
                             
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Quantity</label>
                                        <input name="quantity" type="text" value="<%= product.quantity %>"
                                            class="form-control border">
                                            <div id="quantity-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Operating System</label>
                                        <input name="operatingSystem" type="text" value="<%= product.operatingSystem %>"
                                            class="form-control border">
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Storage</label>
                                        <input name="storage" type="text" value="<%= product.storage %>"
                                            class="form-control border">
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        <label class="form-label">Color</label>
                                        <input name="color" type="text" value="<%= product.color %>"
                                            class="form-control border">
                                    </div>
                                </div>
                            </div>
                            <div class="card mb-4">

                                <div class="card-body">
                                    <div class="row gx-2">
                                        <div class="col-sm-6 mb-3">
                                            <label class="form-label">Category</label>
                                            <select class="form-select border" style="width: 150px;" name="categoryId">
                                                <!-- // value="<- categoryOfProduct %>" -->
                                                <option value= <%-product.category %>><%- categoryOfProduct  %>
                                                </option>
                                                
                                                <% for (let i=0; i < cat.length; i++) { %>
                                                    <option value="<%= cat[i]._id %>">
                                                        <%= cat[i].name %>
                                                    </option>
                                                    <% } %>
                                            </select>
                                        </div>
                                    </div> <!-- row.// -->
                                </div>
                            </div> <!-- card end// -->


                            <div class="card mb-2">
                                <div class="card-header">
                                    <h4>Choose images</h4>
                                </div>

                                <div id="addedImagesContainer" class="col-md-6">
                                    <% for (let i=0; i < product.productImage.length; i++) { %>
                                        <div class="col-md-12 mb-4">
                                            <div class="row">
                                                <div class="col-12">
                                                    <img class="rounded" style="width: 50px; height: 60px;"
                                                        src="/uploads/product-images/<%= product.productImage[i] %>"
                                                        alt="image" data-filename="<%= product.productImage[i] %>">
                                                    <span class="delete-icon"
                                                        onclick="deleteImage('<%= product._id %>', '<%= product.productImage[i] %>')">‚ùå</span>
                                                </div>
                                            </div>
                                        </div>
                                        <% } %>
                                </div>


                                <div class="card-body">
                                    <div class="input-upload">
                                        <img src="assets/imgs/theme/upload.svg" alt="">
                                        <input class="form-control border" name="images" id="imageInput" type="file"
                                            multiple>
                                    </div>
                                </div>
                            </div>


                            <!-- card end// -->

                            <div>

                                <button class="btn btn-md rounded font-sm hover-up" id="updatebtn"
                                     type="submit">Update</button>
                            </div>
                        </form>
                    </div>
                </div> <!-- card end// -->

            </div>



        </div>
        </div>
    </section>


    <style>
        .thumbnails-container {
            display: flex;
            overflow-x: auto;
        }

        .thumbnail {
            margin-right: 10px;

        }
    </style>

<script>

    //dynamically creates thumbnails for the selected images and displays them in a container. It also provides the functionality to remove individual thumbnails and their corresponding files from the selection.
    const selectedImages = [];
    document.getElementById("imageInput").addEventListener("change", handleFileSelect);

    function handleFileSelect(event) {
        const addedImagesContainer = document.getElementById("addedImagesContainer")
        addedImagesContainer.HTML = "";

        const files = event.target.files;

        for(let i = 0; i < files.length; i++) {
            const file = files[i];

            selectedImages.push(file)

            const thumbnail = document.createElement("img");
            thumbnail.classList.add("thumbnail");

            const img = document.createElement("img");
            img.src = URL.createObjectURL(file);
            img.alt = "thumbnail";

            img.style.width= "50px";
            img.style.height = "auto";
          
            const removeIcon =  document.createElement("span");
            removeIcon.innerHTML = "&times;";

            removeIcon.addEventListener("click", function() {

              const index = selectedImages.indexOf(file);
                 if (index !== -1){
                selectedImages.splice(index, 1)
                }
                thumbnail.remove();
                });
              
            thumbnail.appendChild(img);     //append() method is used to insert specified content, such as HTML elements or text, at the end of the selected element(s)
            thumbnail.appendChild(removeIcon);
            addedImagesContainer.appendChild(thumbnail)
        }
    }
    function deleteImage(productId, filename) {
        deleteSingleImage({productId, filename})
    }

    function deleteSingleImage({productId, filename}){
       alert(JSON.stringify(productId))
       alert(JSON.stringify(filename))
        alert("inside deleteSingle image in delete image")

        fetch("/admin/deleteImage", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({productId,filename})
        })
        .then((response) => location.reload())
        .then((data) => {
            if(data.success){
                removeImage(filename);
            } else {
                console.error("Error deleting image:", data.error)
            }
        }).catch((error) => {
            console.log(error.message)
        })
    }

    function removeImage(filename) {
        const imageElement = document.querySelector(`[data-filename]="${filename}"]`);

        if(imageElement) {
            imageElement.closest('.col-md-12').remove();
        }
    }

//     function deleteSingleImage(productId, filename){
//     alert("inside deleteSingle image in delete image");

//     fetch("/admin/deleteImage", {
//         method: "POST",
//         headers: {
//             "Content-Type": "application/json"
//         },
//         body: JSON.stringify({productId, filename})
//     })
//     .then(response => {
//         if (!response.ok) {
//             throw new Error('Network response was not ok');
//         }
//         return response.json();
//     })
//     .then(data => {
//         if(data.success){
//             removeImage(filename);
//             location.reload();
//         } else {
//             console.error("Error deleting image:", data.error);
//         }
//     })
//     .catch(error => {
//         console.error('There was a problem with the fetch operation:', error);
//     });
// }



    function validateAndSubmit(){
        if(validateForm()){
            document.forms[0].submit();// Assuming this is the first (and only) form on your page
        } else return false;
    }

    function validateForm() {
        resetErrorMessages();
        var isValid = true;

        var productName = document.getElementsByName("productName")[0].value;
        var regularPrice = document.getElementByName("regularPrice")[0].value;
        var salePrice = document.getElementsByName("salePrice")[0].value;
        var quantity = document.getElementsByName("quantity")[0].value;

        if(productName === ""){
            dispalyErrorMessage("productName-error", "Product Name is required")
            isValid = false;
        }
        
        if (!/^[1-9]\d*$/.test(quantity)) {
                displayErrorMessage("quantity-error", "Quantity must be a positive integer");
                isValid = false;
            }
            return isValid
        }

        function dispalyErrorMessage(elementId, message) {
            var errorElement = document.getElementById(elementId);
            errorElement.innerText = message;
            errorElement.style.display = "block"
        }
        function resetErrorMessages() {
            var errorElements = document.querySelectorAll(".error-message");
            errorElements.forEach(function(element){
                element.innerText = "";
                element.style.display = "none";
            });
        }
</script>

<%- include("../partials/adminFooter") %>